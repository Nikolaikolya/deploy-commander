/*!
# Deploy Commander - Инструмент автоматизации деплоя

Deploy Commander - это инструмент командной строки для автоматизации развертывания
приложений с использованием настраиваемых цепочек команд и обработкой ошибок.

## Возможности

- Настройка и выполнение команд через YAML-конфигурацию
- Последовательное выполнение событий в процессе деплоя
- Автоматический откат при ошибках
- Ведение истории деплоев
- Проверка наличия необходимых инструментов

## Структура проекта

- `app` - Основная логика приложения
- `cli` - Интерфейс командной строки
- `config` - Работа с конфигурацией
- `commands` - Работа с системными командами
- `events` - Система событий и уведомлений
- `executor` - Выполнение команд и обработка ошибок
- `logging` - Настройка журналирования
- `run` - Управление процессом деплоя
- `settings` - Глобальные настройки приложения
- `storage` - Хранение и управление историей деплоев
*/

use clap::Parser;
use std::process::exit;

mod app;
mod cli;
mod commands;
mod config;
mod events;
mod executor;
mod logging;
mod run;
mod settings;
mod storage;

use cli::Cli;

#[tokio::main]
async fn main() {
    // Парсинг аргументов командной строки
    let cli = Cli::parse();

    // Инициализация приложения, загрузка настроек и конфигурации
    let app_context = match app::initialize(&cli) {
        Ok(context) => context,
        Err(e) => {
            eprintln!("{}", e);
            exit(1);
        }
    };

    // Проверка наличия необходимых команд
    app::check_dependencies().await;

    // Выполнение команды
    app::execute_command(&cli, &app_context).await;
}
